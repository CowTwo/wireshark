commit f781f399de
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon May 18 12:28:20 2020 +0200

    NAS 5GS: fix parsing of mapped EPS bearer contexts IE
    
    - the DEB bit no longer exists
    - the EPS parameter highlight was off by one
    
    Change-Id: Ic2abf827a2d70babab7854f339964a6535c73c53
    Reviewed-on: https://code.wireshark.org/review/37243
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 9d6c7f3ffb4b5d99fa5ac166d0a37c284f5bbc71)
    Reviewed-on: https://code.wireshark.org/review/37244

commit 65e4616945
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Sun May 17 12:44:54 2020 +0200

    Windows: upgrade Npcap to 0.9991
    
    Change-Id: Ib484bcdabf9279e2afd91962d576aad13bbcafe2
    Reviewed-on: https://code.wireshark.org/review/37242
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>

commit d8b670955a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 17 08:27:52 2020 +0000

    [Automatic update for 2020-05-17]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ia60a904bbe8cf2174c784bfd38fc23e391b1e879
    Reviewed-on: https://code.wireshark.org/review/37239
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 08ff3a4a34
Author: Guy Harris <gharris@sonic.net>
Date:   Sat May 16 15:31:02 2020 -0700

    isobus-vt: update with information from the spec.
    
    It's ISO 11783-6, and the spec agrees with the previous change.
    
    Change-Id: Iac8dd83a7844c59bcc1b74cd0712bc5f38b3ae43
    Reviewed-on: https://code.wireshark.org/review/37218
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit e34f760f285b13d1267c721ae11882241a6a3f3b)
    Reviewed-on: https://code.wireshark.org/review/37224

commit ca192eec61
Author: Vadim Yanitskiy <axilirator@gmail.com>
Date:   Mon Apr 13 23:28:26 2020 +0700

    GSM/SMS: clarify 'no error' values of TP-Status IE
    
    In case of successfull delivery, TP-Status IE looks as follows:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .00. .... = Error: Short message transaction completed (0)
          ...0 0000 = Reason: Short message received by the SME (0)
    
    in particular, "Error: Short message transaction completed" looks
    confusing. Let's make it a bit cleaner:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .00. .... = Error: No error, short message transaction completed (0)
          ...0 0000 = Reason: Short message received by the SME (0)
    
    Change-Id: I95830877c1ff2f45e3c68a40febcf357abda597d
    Reviewed-on: https://code.wireshark.org/review/36829
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 514706b1f87c0a1a45eff4d91d31faec6a9d9323)
    Reviewed-on: https://code.wireshark.org/review/37223
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit afc60c0251
Author: Vadim Yanitskiy <axilirator@gmail.com>
Date:   Mon Apr 13 22:47:10 2020 +0700

    GSM/SMS: decouple error and reason fields in TP-Status IE
    
    According to 3GPP TS 23.040, section 9.2.3.15, the TP-Status IE
    indicates the status of a previously submitted SMS-SUBMIT and
    certain SMS COMMANDS for which a Status-Report has been requested.
    
    Currently Wireshark dissects this IE as follows:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .000 0000 = Error: Short message transaction completed (0)
          .000 0000 = Reason: Short message received by the SME (0)
    
    so it's not clear how exactly both Error and Reason are derived
    from 7 less-significant bits of the first (and the last) octet.
    
    As can be seen from the section 9.2.3.15, two less-significant
    bits of those 7 define the Error, while the remaining 5 bits
    define the Reason.
    
    With this change applied, dissected TP-Status IE looks as follows:
    
      TP-Status
          0... .... = Definition of bits 0-6: as follows
          .00. .... = Error: Short message transaction completed (0)
          ...0 0000 = Reason: Short message received by the SME (0)
    
    To achieve this, type of the 'dis_field_st_error_rvals' was changed
    from 'range_string' to 'value_string', and the range / string array
    'dis_field_st_reason_rvals' was split into 4 arrays corresponding
    to 4 possible Error values.
    
    Change-Id: I8418ae3532c5e4b0ad2c956c5cd8cd90767d2fd6
    Reviewed-on: https://code.wireshark.org/review/36828
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit fd19f39bf2b54ac61c1a8bf10fbb6b234e91091e)
    Reviewed-on: https://code.wireshark.org/review/37222
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 63b626f00b
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Fri Apr 3 09:50:11 2020 +0200

    GSM SMS: fix gsm_sms_tp_failure_cause_values array definition
    
    Change-Id: I3622e824592b66144fe4e1be3c82bf5e207aaf43
    Reviewed-on: https://code.wireshark.org/review/36677
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 37831185f0f88b5dd1c7c9d33ef1a4f2563fecc3)
    Reviewed-on: https://code.wireshark.org/review/37221
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 16a85d5ee0
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Sat May 9 15:19:22 2020 +0100

    GSM-SMS: add missing increment of offset.
    
    Fixes bug introduced in
    https://code.wireshark.org/review/#/c/37160/
    
    Change-Id: I70620dcdf1e1354b9a377a8e755da3a7baa35f6c
    Reviewed-on: https://code.wireshark.org/review/37172
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit a32298b7f6dd0e411b4774334f32ede775e402b4)
    Reviewed-on: https://code.wireshark.org/review/37220
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 888ea633cf
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Thu May 7 18:25:35 2020 +0100

    More PVS-Studio issues flagged by Valerii Zapodovnikov.
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-frame.c        818     warn    V547 Expression 'fi' is always true.
    /opt/SourceCode/wireshark/epan/dissectors/packet-gsm_sms.c      2692    warn    V547 Expression 'length <= (offset - saved_offset)' is always false.
    /opt/SourceCode/wireshark/epan/dissectors/packet-isup.c 4688    warn    V1037 Two or more case-branches perform the same actions. Check lines: 4688, 4697
    /opt/SourceCode/wireshark/extcap/androiddump.c  1237    warn    V560 A part of conditional expression is always true: data_str.
    /opt/SourceCode/wireshark/extcap/androiddump.c  1603    warn    V547 Expression is always true.
    /opt/SourceCode/wireshark/ui/qt/models/packet_list_model.cpp    497     warn    V560 A part of conditional expression is always true: ok_r1.
    
    For the voip_calls.c change, I preferred to initailize along with every other field, rather than set to actual value it gets set to later.
    
    For the isobus-vt change, I could not find a spec but followed the pattern from other error bit fields.
    
    Bug: 16335
    Change-Id: Ie55082222b582f6fff4e8c7a992d863acee6cf15
    Reviewed-on: https://code.wireshark.org/review/37160
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Reviewed-by: Martin Mathieson <martin.r.mathieson@googlemail.com>
    (cherry picked from commit 569f3bd6111cfebe2fcd62484d854a053b5c9636)
    Reviewed-on: https://code.wireshark.org/review/37219
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 3c67e08b4f
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Thu May 14 23:16:05 2020 +0200

    Radius: Fix NULL pointer call
    
    Check length before calling tvb_bytes_to_str()
    
    Bug: 16564
    Change-Id: I3cfb91d5da5f6f620f8f48c55fb3837ebe70972c
    Reviewed-on: https://code.wireshark.org/review/37200
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit b5dc967c7924a3bd4326099c2939f3bb068a1c35)
    Reviewed-on: https://code.wireshark.org/review/37204
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>

commit f6e8731eb0
Author: Sergey Bogdanov <Sergey.Bogdanov@astrosoft.ru>
Date:   Mon Apr 27 10:24:35 2020 +0300

    RTSP/SDP: Fix parsing error for H264:sprop-parameter-sets
    
    Rework the method verifying  if there are more data in packed attribute
    New version checks if there are any non-zero bits after the current bit in the
    packet. If it sees some non-zero bits - that means there is some data in the
    packet. If there are zero bits only - that means there is no more data in the
    packet.
    Changes affect RTSP/SDP dissector and they are specific for
    SDP media attribute (a) fmtp/sprop-parameter-sets for H264 protocol
    
    Bug: 16322
    Change-Id: Ic4768c56f16b79cbf2ccac8a9736f8fa15043224
    Reviewed-on: https://code.wireshark.org/review/36899
    Petri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 5f80801adda1b59f714373cfc636893d7aea41f1)
    Reviewed-on: https://code.wireshark.org/review/36989

commit 303aa2601f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 10 18:31:11 2020 +0000

    [Automatic update for 2020-05-10]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I3f370a5dee3e9579133c288af522acb867fdf5dc
    Reviewed-on: https://code.wireshark.org/review/37174
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 7ebd5405f1
Author: Tomasz Moń <desowin@gmail.com>
Date:   Thu May 7 16:45:14 2020 +0200

    Qt: Respect user preference to hide packet list
    
    Instead of hiding whole packet list widget when freezing, hide only the
    header. This prevents unwanted column resizes while keeping the widget
    on screen while capture file is loading.
    
    Prevent flickering by showing master_split_ only after all widgets are
    in correct place.
    
    Ping-Bug: 16063
    Ping-Bug: 16491
    Change-Id: I3bb0763c44b23b1e4118003502d4bf3903591f34
    Reviewed-on: https://code.wireshark.org/review/37159
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 63a8ac5210f1935c684b74170278b177d2e01561)
    Reviewed-on: https://code.wireshark.org/review/37163

commit 5ce52f7485
Author: Tomasz Moń <desowin@gmail.com>
Date:   Sat May 2 22:36:46 2020 +0200

    Qt: Stretch last packet list header section
    
    Programatically show the master split widget before elements are added
    to prevent pending resize events from resizing packet columns to insane
    widths (in my case orders of magnitude higher than display resolution)
    
    Such resize was occuring when loading capture file if configuration file
    included hidden columns (e.g. 55 defined columns, 8 visible). The resize
    was not directly visible to user. Resize event call chain included calls
    to recent_set_column_width() that changed width stored in configuration.
    Modified configuration column width value would become effective after
    user added or removed columns.
    
    Hide PacketList when freezing and show it when thawing. Do not call
    setUpdatesEnabled(false) as it leads to widget/preferences columns
    missynchronization.
    
    Clear packet list before freeing frame data. This prevents accessing
    freed memory in ProtoTree on file close if packet list was in focus and
    the next widget to get focus is packet details.
    
    Ping-Bug: 16063
    Bug: 16491
    Change-Id: I2c21d928348681af1793b3263815c81ee73d41b0
    Reviewed-on: https://code.wireshark.org/review/37029
    Petri-Dish: Tomasz Moń <desowin@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 1d0b233f12e937f6278fc38775fca530e2be2661)
    Reviewed-on: https://code.wireshark.org/review/37155
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>

commit 62bd0752f8
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Tue May 5 17:35:15 2020 +0200

    SOMEIP: removing warnings due to guint64 (%lx vs %llx)
    
    Change-Id: I5737c4ce48030a650f58df7593182563966c54a2
    Reviewed-on: https://code.wireshark.org/review/37148
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit f263df0a4542c47d90798bd30fe2c4cd9d252820)
    Reviewed-on: https://code.wireshark.org/review/37151

commit 64f981271c
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Mon May 4 23:01:09 2020 +0200

    SOMEIP: Bugfix for SOME/IP-SD Collision of Unique ID
    
    The unique id for SOME/IP-SD was not unique for eventgroups since
    it was made up by the service id and instance id only.
    This patch adds the eventgroup id to fix this.
    
    Bug: 16549
    Change-Id: I16bf0884d4a7bc1d3df5de868833fb1887ba0baa
    Reviewed-on: https://code.wireshark.org/review/37131
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 6ada4302b545d28a2bf2b8711382051f50363b6d)
    Reviewed-on: https://code.wireshark.org/review/37149
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 9ccd6b0520
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 4 21:23:36 2020 -0700

    Infiniband: skip past the undissected vendor header.
    
    In parse_VENDOR() get the length of the raw data (presumed to be
    vendor-specific data) by using proto_tree_add_item_ret_length(), and add
    that to the offset.
    
    Should addresses PVS-Studio complaint
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-infiniband.c   2782    warn
    V1048 The '* offset' variable was assigned the same value.
    
    Change-Id: Icac567e3ef2ad0484aaa111e5bc8a5cd83d9d8a5
    Reviewed-on: https://code.wireshark.org/review/37143
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit b35a2c96258a021585ed831712ee94fef940412a)
    Reviewed-on: https://code.wireshark.org/review/37144

commit 8d2600d8c5
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 4 18:03:26 2020 -0700

    pcapng (dissector): don't assume the endianness doesn't change.
    
    Keep the endianness (as an ENC_ value) in the info structure we use
    while dissecting.
    
    When dissecting an SPB, peek ahead at the byte-order magic before
    dissecting the block length, to determine the byte order of all fields
    in that block *and* all other blocks in that section.  Report an error
    and stop dissecting if the byte-order magic isn't valid.
    
    Change-Id: I6d94d4fad10d60f327f4a486e180cdcee2f6be2d
    Reviewed-on: https://code.wireshark.org/review/37138
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 2e7a01b56ae976e28583ceef7d0be56f13bea664)
    Reviewed-on: https://code.wireshark.org/review/37139

commit 26da8c7c0b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Mon May 4 14:27:58 2020 -0700

    Fix calculation of fractional part of time stamps.
    
    Do it the same way that wiretap/pcapng.c does it.
    
    Bug: 16440
    Change-Id: Ied811e5d10d4219de718f4f74254440b324f0ed1
    Reviewed-on: https://code.wireshark.org/review/37132
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f2f04eb132a6630f86bf1008bf8566d987d09f17)
    Reviewed-on: https://code.wireshark.org/review/37133

commit cae1c562d7
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon May 4 19:39:27 2020 +0200

    NAS 5GS: fix highlighting of the QOs flow description elements
    
    Change-Id: I3907f0dd4c985d4a4390ad37454967350b7745eb
    Reviewed-on: https://code.wireshark.org/review/37099
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    (cherry picked from commit 274ec6adc4983008fc0b500aa28594d99649e474)
    Reviewed-on: https://code.wireshark.org/review/37129

commit 95c6c44317
Author: David Perry <boolean263@protonmail.com>
Date:   Mon May 4 08:50:45 2020 -0400

    MIME/pcapng: use snap length to get SPB data length
    
    The "Original Packet Length" field of a Simple Packet Block can be
    greater than the amount of data actually captured; the Interface
    Description Block's snap length must be checked as well.
    
    To enable this in the MIME Files Format dissector, the
    `interface_description` needs to store the snap length. This allows the
    appropriate section of `dissect_block()` to access it via the `info`
    parameter.
    
    The "Captured Length" field from EPB/PB dissection is added to SPB
    dissection as a generated field to clarify the difference between it and
    the field labelled "Packet Length".
    
    Bug: 16526
    Change-Id: I27f2fccc9ed2f682377059931b18d7e42d7ff0a3
    Reviewed-on: https://code.wireshark.org/review/37095
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 5b238a6c76634712c09e355c7945721a3a0ae8f1)
    Reviewed-on: https://code.wireshark.org/review/37124

commit d309f25dd4
Author: David Perry <boolean263@protonmail.com>
Date:   Mon May 4 08:38:05 2020 -0400

    MIME/pcapng: reset interface array on new SHB
    
    When reading a new SHB in a pcapng file, reset the array of interface
    descriptions to empty. No blocks that follow will be referring to
    interfaces from the previous section.
    
    Ping-Bug: 16526
    Change-Id: Iaa4257e3392bb829445aab1f79b54334f5db0263
    Reviewed-on: https://code.wireshark.org/review/37092
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit c143dfa5446a08fb5fe00202bb80a94bf0cb14a7)
    Reviewed-on: https://code.wireshark.org/review/37121

commit 012ec01729
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 8 01:19:33 2020 -0700

    Add additional checks, clean up some stuff.
    
    Add checks for bad block lengths - either too short or not a multiple of
    4.  (Yes, the pcapng spec requires it to be a multiple of 4.  And there
    is at least one implementation that requires it.)
    
    For various structures with a length field, create the top-level tree
    field for the item with a "run to the end of the packet" length and,
    once we're finished dissecting it, set the length to its actual value.
    
    Fetch various field values using proto_tree_item_add_uint.  Fix some
    incorrect field types based on errors reported by that.
    
    If an end-of-options option has a non-zero length, 1) don't treat it as
    not an end-of-options option and 2) report an error on its length.
    
    Change-Id: I72b2c065f3e3c76d5b71a1cd2ef3c1f497623266
    Reviewed-on: https://code.wireshark.org/review/36746
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 0d2e6033ecad9c1e33239b5976a7c1b356fe4173)
    Reviewed-on: https://code.wireshark.org/review/37117

commit 4a68e5cabd
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri Mar 27 19:40:32 2020 -0700

    Remove space that snuck in during editing.
    
    Change-Id: Iea196ecb3c236c5257ce57fcff1401a6386c95f9
    Reviewed-on: https://code.wireshark.org/review/36601
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 5e77ab8b9512519c7e975bbbac264a2241904bc6)
    Reviewed-on: https://code.wireshark.org/review/37114

commit 435e4dd56b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri Mar 27 19:34:18 2020 -0700

    Add support for IDB option 15 - if_hardware, for hardware description.
    
    While we're at it, use decimal, rather than hex, for option numbers;
    they're given in decimal in the pcapng spec.
    
    And fix a typo.
    
    Change-Id: I2a6e857a29d5bcb6533b8f5aef00711dd57e6df5
    Reviewed-on: https://code.wireshark.org/review/36600
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f9cf25f7df071fe4db4c648e84476d9eef48796c)
    Reviewed-on: https://code.wireshark.org/review/37111

commit 16369e0758
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 15:28:11 2020 -0700

    pcapng: pull the interface ID handling into a single routine.
    
    Have a routine that takes an interface ID as an argument and:
    
            if it's within range, fetches the interface description and
            returns a pointer to it;
    
            if it's not within range, adds an expert info and returns NULL;
    
    and have the code to dissect blocks with interface IDs just call it.
    
    Change-Id: I705fe94a9a5fb5a27650465f3c55e0dc1b6fbd23
    Reviewed-on: https://code.wireshark.org/review/37090
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f3ddcb96a369472cde3c83f26ff747d5772b8e3a)
    Reviewed-on: https://code.wireshark.org/review/37109

commit 547347773b
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 11:16:58 2020 -0700

    pcapng: fix more interface ID checks.
    
    Fix the check for the Interface Statistics Block as well.
    
    Make the check for the Simple Packet BLock similar to the other checks -
    at the beginning, set interface_id to 0 and then check interface_id
    against the size of the array.
    
    Change-Id: Ib05255fe13eca6292447f365b62ff3094805bd4a
    Reviewed-on: https://code.wireshark.org/review/37071
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 60622e63fd561830e1de24e28ae4e5f7952ed130)
    Reviewed-on: https://code.wireshark.org/review/37106

commit 992fd79295
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 10:54:49 2020 -0700

    pcpang: fix test for missing IDB.
    
    *Any* packet block can have an invalid interface ID; that's not just an
    error in the first packet block.
    
    For Enhanced Packet Blocks and Packet Blocks, you can have an invalid
    interface ID even if you've already seen one or more Interface
    Description Blocks; you have to check whether the interface ID is >= the
    number of IDBs we've seen.
    
    Change-Id: I33268d224ef3ad928ad9c000027fb6783806b978
    Reviewed-on: https://code.wireshark.org/review/37070
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 29340f1b33db6f3abb4bdd80a949430d20020d7d)
    Reviewed-on: https://code.wireshark.org/review/37103

commit 099a7ea5b3
Author: David Perry <boolean263@protonmail.com>
Date:   Thu Apr 30 08:32:44 2020 -0400

    pcapng: expert info when packet or ISB appear without interfaces
    
    A valid pcapng file must have an IDB before any EPB/SPB/PB/ISB. So check
    our interface count when we parse the first such block of a section, and
    add expert info if there are no interfaces.
    
    Discovered during work on Bug #16526.
    
    Ping-Bug: 16526
    Change-Id: I23ff452fd163a0e4472e0658a905f85ab85d5e9d
    Reviewed-on: https://code.wireshark.org/review/36986
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 1a9c5364d18b32c5fef72c0bcb3ea2095e60d8b0)
    Reviewed-on: https://code.wireshark.org/review/37100
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 63928ce37a
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 13:56:37 2020 -0700

    Generate a dummy description if we don't have an interface name.
    
    Just have a display name and description of "(Unknown)" if we have no
    display name, no description, *and* no interface name.
    
    Change-Id: I8403779c17c1e6d96d5ba29941081f560ad5339c
    Reviewed-on: https://code.wireshark.org/review/37086
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 6ee3776e32c4b1a19c8e4a03acae02b0c026153a)
    Reviewed-on: https://code.wireshark.org/review/37087

commit 0f845c6650
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 13:04:49 2020 -0700

    Clean up some issues with get_iface_list_string().
    
    Remove an assignment of NULL to a variable when it's in a branch of code
    where the variable's already known to be NULL.  Found by PVS-Studio.
    
    Pull get_display_name_for_interface() into the one place it's used.
    That:
    
        allows us to eliminate a test as, inside the loop where it's called,
        the loop index is what's passed to it, and the loop tests whether
        it's in range, so the test will never fail;
    
        means we just set interface_opts once, for both of the places it's
        used.
    
    Then we fix that code so that it sets interface_opts->descr to a
    generated descriptive name if it *is* null, rather than if it's *not*
    null.
    
    That should clean up some issues found by 1) PVS-Studio and 2) me.
    
    Change-Id: I4188ca8f5c7306477ef11117016691d1c9f0267f
    Reviewed-on: https://code.wireshark.org/review/37082
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 5cbef3115e66f13e82ff9340155777d1e6699057)
    Reviewed-on: https://code.wireshark.org/review/37083

commit 43b7f541bf
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun May 3 11:56:44 2020 -0700

    pcapng: show some fields in decimal, not hexadecimal.
    
    The interface ID is just an ordinal; there's no reason to show it as hex
    (we don't show it as hex if we're treating a pcapng file as a capture
    rather than a file to be dissected).
    
    The packet drops count is just a count, so, again, there's no reason to
    show it as hex.
    
    The hash algorithms numbers are given in decimal in the pcapng spec, so
    display it as decimal.
    
    Change-Id: I93fd50e7243a5b012bd29324f7116e634aca62af
    Reviewed-on: https://code.wireshark.org/review/37072
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit ab00f3533cd96fa1ff8f691be07ebb01b6f43e2c)
    Reviewed-on: https://code.wireshark.org/review/37079

commit b59795a696
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sat May 2 17:08:49 2020 +0100

    voip_calls: Fix leak of GString from unistim handling.
    
    /opt/SourceCode/wireshark/ui/voip_calls.c       3786    err     V773 The function was exited without releasing the 'g_tmp' pointer. A memory leak is possible.
    
    Tested with unistim_call.pcap from SampleCaptures.
    
    Bug: 16335
    Change-Id: I8518a3e277e8acec15e09ca5f36672b5bdd181fe
    Reviewed-on: https://code.wireshark.org/review/37028
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 41a4eaa4465f7f92c07433c8a349b88fed147ad9)
    Reviewed-on: https://code.wireshark.org/review/37076

commit aa2976dab3
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sun May 3 13:15:52 2020 +0100

    Some more issues identified by PVS-Studio.
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-osc.c  367     err     V562 It's odd to compare 0 or 1 with a value of 0.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  960     note    V576 Incorrect format. Consider checking the eighth actual argument of the 'proto_tree_add_subtree_format' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  980     note    V576 Incorrect format. Consider checking the third actual argument of the 'proto_item_append_text' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2473    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_prepend_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2482    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_append_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2633    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_append_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  2650    note    V576 Incorrect format. Consider checking the fourth actual argument of the 'col_prepend_fstr' function. The SIGNED integer type argument is expected.
    /opt/SourceCode/wireshark/epan/dissectors/packet-stun.c 565     warn    V1051 Consider checking for misprints. It's possible that the 'reported_length' should be checked here.
    /opt/SourceCode/wireshark/epan/dissectors/packet-umts_fp.c      4126    warn    V1051 Consider checking for misprints. It's possible that the 'reported_length' should be checked here.
    /opt/SourceCode/wireshark/epan/dissectors/packet-umts_fp.c      4942    warn    V1051 Consider checking for misprints. It's possible that the 'reported_length' should be checked here.
    /opt/SourceCode/wireshark/ui/voip_calls.c       1444    err     V773 The 'comment' pointer was assigned values twice without releasing the memory. A memory leak is possible.
    /opt/SourceCode/wireshark/wsutil/filesystem.c   1531    err     V773 The function was exited without releasing the 'files' pointer. A memory leak is possible.
    /opt/SourceCode/wireshark/wsutil/filesystem.c   1717    err     V773 The function was exited without releasing the 'files' pointer. A memory leak is possible.
    
    Bug: 16335
    Change-Id: I8df3ba6d070823dcb43c4152d9156358f701e8dc
    Reviewed-on: https://code.wireshark.org/review/37069
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 6ba8bd037f46b7dbb0e82ca79ad1d0cfbbe0eda9)
    Reviewed-on: https://code.wireshark.org/review/37073

commit 70586d57b7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 3 08:13:37 2020 +0000

    [Automatic update for 2020-05-03]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ia08e69aba73c8c4a720d12343cac597194ef14a8
    Reviewed-on: https://code.wireshark.org/review/37064
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 612b108612
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sun May 3 00:33:51 2020 +0100

    Fix some issues seen with a fresh run of PVS Studio
    
    /opt/SourceCode/wireshark/epan/dissectors/packet-aoe.c  328     warn    V581 The conditional expressions of the 'if' statements situated alongside each other are identical. Check lines: 323, 328.
    /opt/SourceCode/wireshark/epan/dissectors/packet-aprs.c 1148    warn    V1037 Two or more case-branches perform the same actions. Check lines: 1148, 1161
    /opt/SourceCode/wireshark/epan/dissectors/packet-lsd.c  127     err     V547 Expression 'strlen("cookie") == 0' is always false.
    /opt/SourceCode/wireshark/epan/dissectors/packet-rpc.c  3385    warn    V547 Expression 'conversation == NULL' is always true.
    /opt/SourceCode/wireshark/epan/dissectors/packet-snort-config.c 465     note    V576 Incorrect format. Consider checking the fourth actual argument of the 'g_snprintf' function. Under certain conditions the pointer can be null.
    /opt/SourceCode/wireshark/epan/dissectors/packet-snort.c        630     warn    V768 The variable 'condition' is of enum type. It is odd that it is used as a variable of a Boolean-type.
    /opt/SourceCode/wireshark/epan/dissectors/packet-snort.c        969     warn    V547 Expression '!attempt_match' is always false.
    
    Bug: 16335
    Change-Id: I93bbc40f0467ebaab74335f6edc7d60e1c600a94
    Reviewed-on: https://code.wireshark.org/review/37044
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit b99dcf0593e105bf46603e714d295b04b72c28bd)
    Reviewed-on: https://code.wireshark.org/review/37059

commit bed111fa43
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 17:35:31 2020 -0700

    stats_tree: plug a memory leak.
    
    Don't allocate the GString until we know we'll be using it.
    
    Change-Id: I97e2f897795ada864cbacc3822d39e7348a93ca2
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37048
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit c22b2ccd94e4e0e5f71e2cb6bae5b9e2abe7ebf4)
    Reviewed-on: https://code.wireshark.org/review/37056

commit 91a621e721
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sat Feb 15 23:00:17 2020 +0000

    More issues spotted by PVS-Studio in bug 16335.
    
    Only the change to packet-imap.c really represents a bug.
    
    Change-Id: Ie270f97f3d94c338ea3c84a712f8f4d43ffd36f4
    Reviewed-on: https://code.wireshark.org/review/36115
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 7e02165453f78dc2196d66d6167d8fdeebdf2cb3)
    Reviewed-on: https://code.wireshark.org/review/37052
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit 92d657d98b
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Fri Feb 14 21:13:56 2020 +0000

    Some issues spotted by PVS-Studio in bug 16335.  Many more remain
    
    Change-Id: If856e25af8e33eeef5b9e595f1f6820459892b17
    Reviewed-on: https://code.wireshark.org/review/36110
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (backported from commit e30f0d09208b01a7dd3d685b612110d16683f045)
    Reviewed-on: https://code.wireshark.org/review/37049
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Reviewed-by: Guy Harris <gharris@sonic.net>

commit c086ce94b5
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 16:11:04 2020 -0700

    prefs: plug a memory leak.
    
    Don't allocate the cols_hidden GString until we know we need it.
    
    Change-Id: I02966d2820efeb5d61d259a567bf9063d8b519f1
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37043
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 38c8eb8835de6f540e91483d373f49451f8b5e6c)
    Reviewed-on: https://code.wireshark.org/review/37045

commit 3d7681e919
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 15:25:02 2020 -0700

    epan/color filters: plug a memory leak.
    
    Change-Id: Ibda5266e6b6a612cf7add319dcb8e3da93b57da0
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37038
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit e6451ca72affd59200c01644f8bf90d74c4fd2ad)
    Reviewed-on: https://code.wireshark.org/review/37040

commit c534b0adc7
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat May 2 14:53:48 2020 -0700

    epan DTD parser: don't leak the full path string on error.
    
    While we're at it, fix a return - the return value is a pointer, with
    NULL meaning error, not a Boolean, with FALSE meaning error, so return
    NULL, not FALSE.
    
    Change-Id: Ie77fe2c6173293a2a202ad29a6c5033e2a401aa7
    Ping-Bug: 16335
    Reviewed-on: https://code.wireshark.org/review/37033
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 7478d1fc3bd213e3aa5f1193723924ddaa080f62)
    Reviewed-on: https://code.wireshark.org/review/37035

commit 0df4df5bfb
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Sat May 2 16:55:56 2020 +0100

    Fix memory leak in export_object.c
    
    /opt/SourceCode/wireshark/epan/export_object.c  106     err     V773 The function was exited without releasing the 'ext_str' pointer. A memory leak is possible.
    
    Bug: 16335
    Change-Id: Ic4811dabe2de9f9e7793f276336d2a87665e5791
    Reviewed-on: https://code.wireshark.org/review/37027
    Petri-Dish: Martin Mathieson <martin.r.mathieson@googlemail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 318f912cb936aaecd7f0a08287d45c7748a2ef5a)
    Reviewed-on: https://code.wireshark.org/review/37030

commit 8df9cfbc79
Author: João Valverde <joao.valverde@tecnico.ulisboa.pt>
Date:   Thu Apr 30 16:43:50 2020 +0100

    CMake: Fix FindGLIB2 for saner output
    
    Apparently FindPackageHandleStandardArgs uses if(DEFINED ...) to test
    VERSION_VAR, for somewhat obscure reasons. If we didn't find a suitable
    GLib package we must not define GLIB2_VERSION, otherwise the status
    output is confused and just generally wrong.
    
    Change-Id: Iad4012e69a7c641c50d1e399bbfdb51583cb3b40
    Reviewed-on: https://code.wireshark.org/review/36990
    Reviewed-by: João Valverde <j@v6e.pt>
    Petri-Dish: João Valverde <j@v6e.pt>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>
    (cherry picked from commit 3a32757313e85368e88fdd9dbb82f839514569f5)
    Reviewed-on: https://code.wireshark.org/review/37017

commit 495f17ecc9
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri May 1 14:24:05 2020 -0700

    mpeg: make sure the presence flags are set.
    
    The time stamps are calculated by sequential processing, not read from a
    value in the packet record, so we don't supply them when reading
    randomly.  Make sure the presence flags are 0 in that case (our callers
    currently don't look at time stamps when reading randomly, because
    some other file formats also don't supply time stamps for random reads,
    but we should make it clean).
    
    Change-Id: I494acc5bdf60e0a1de5cf002c3ea8403afce8a07
    Reviewed-on: https://code.wireshark.org/review/37008
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit f9ca93662d88017048130b480d55d3c3cfd44b57)
    Reviewed-on: https://code.wireshark.org/review/37009

commit 5864b38346
Author: Roland Knall <rknall@gmail.com>
Date:   Tue Apr 21 22:54:32 2020 +0200

    Qt: Allow renaming personal profile
    
    If a personal profile has the same name as a global profile (which
    is usually the case if it has been copied without changing the name
    afterwards), there was a bug where renaming the profile was no longer
    possible.
    
    Bug: 16423
    Change-Id: Idafd216d007179a4c6221eafc2ff296d277d5b1d
    Reviewed-on: https://code.wireshark.org/review/36902
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit adb8feee6d505e36ef85bdd5b9fae6f9a7a07237)
    Reviewed-on: https://code.wireshark.org/review/37003
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>

commit f3cb256e5d
Author: Guy Harris <guy@alum.mit.edu>
Date:   Fri May 1 14:19:14 2020 -0700

    camins: make sure the presence flags are set.
    
    The time stamps are calculated by sequential processing, not read from a
    value in the packet record, so we don't supply them when reading
    randomly.  Make sure the presence flags are 0 in that case (our callers
    currently don't look at time stamps when reading randomly, because
    some other file formats also don't supply time stamps for random reads,
    but we should make it clean).
    
    Change-Id: Ic035cc7d4eb36f76beefcfd98a389af09365d363
    Reviewed-on: https://code.wireshark.org/review/37004
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 7982bf6c8a384d9cdfbe8276817abe31e4e9b490)
    Reviewed-on: https://code.wireshark.org/review/37005

commit b7c31f77f2
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 29 18:20:12 2020 -0700

    pcapng: give a structure member an appropriate name.
    
    An entire pcapng file is dissected as a unit, so there's only one file;
    the "file_number" field counts Section Header Blocks, so it's a section
    number, not a file number.  Rename it to "section_number".
    
    Change-Id: I3ee477c9aa0ee4cdfa7496935b2be915c31a4644
    Reviewed-on: https://code.wireshark.org/review/36977
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 1d8cbc1150aae30a8723042c2711a3a34e645bf2)
    Reviewed-on: https://code.wireshark.org/review/36978

commit e7e52e9b0d
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Fri Apr 24 22:37:38 2020 +0200

    DTLS: try harder to decrypt broken traces with double CCS
    
    A retransmitted ChangeCipherSpec could result in resetting the cipher.
    The subsequent Finished message and application data messages would
    therefore fail to decrypt. In legitimate TLS sessions, there should not
    be a CCS without starting a new handshake, so that remains unaffected.
    
    To ease debugging this issue, log the packet number and add some extra
    details to the debug log. Move or remove ssl_packet_from_server calls to
    avoid redundant work and to keep the debug log cleaner.
    
    Additionally, try harder to dissect handshake messages if we know for
    sure that they are decrypted. This allows inspection of a broken
    Finished message that had a too large fragment length.
    
    Tested with a private capture file from Stig Bjørlykke.
    
    Change-Id: If6f15f8b72c467ea9ef15ddcaf2c5ebe980c27c8
    Reviewed-on: https://code.wireshark.org/review/36929
    Petri-Dish: Peter Wu <peter@lekensteyn.nl>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Stig Bjørlykke <stig@bjorlykke.org>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit 17298cc0fbe1655ee07db54457f476f0799b8152)
    Reviewed-on: https://code.wireshark.org/review/36974
    Reviewed-by: Peter Wu <peter@lekensteyn.nl>

commit d863846381
Author: Guy Harris <guy@alum.mit.edu>
Date:   Wed Apr 29 11:24:45 2020 -0700

    capinfos: fix absolute and relative time display.
    
    Make the buffers big enough to handle the largest possible time values
    you can get with a 64-bit time_t.
    
    Don't cast the seconds value to unsigned long; it's probably signed, and
    may not fit in an unsigned long (64-bit on an ILP32 or LLP64 platform),
    so cast it to gint64 and print using G_GINT64_MODIFIER followed by "d".
    
    Bug: 16519
    Change-Id: I3ab79dfa086d2c4dfb6b93eba8cef3bdce731731
    Reviewed-on: https://code.wireshark.org/review/36971
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 46868d4831b6c36fc78d54da5c28f0087aee82a4)
    Reviewed-on: https://code.wireshark.org/review/36972

commit d5399b7279
Author: Roland Knall <rknall@gmail.com>
Date:   Mon Apr 27 17:24:05 2020 +0200

    Qt: Fix export of dissection
    
    Exporting dissected bytes did not consider the
    selection of packets on Windows, if multiple
    packets had been selected
    
    Bug: 16516
    Change-Id: I9d914fe1fed22f842d73caea397a3f37ffc0d523
    Reviewed-on: https://code.wireshark.org/review/36958
    Reviewed-by: Roland Knall <rknall@gmail.com>
    Petri-Dish: Roland Knall <rknall@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    (cherry picked from commit 7fcac9c955af94f0d046e985278ea41936a3b1a2)
    Reviewed-on: https://code.wireshark.org/review/36959
    Petri-Dish: Gerald Combs <gerald@wireshark.org>

commit b9011680e5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 26 08:33:40 2020 +0000

    [Automatic update for 2020-04-26]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: Ie7568e5c31225fcaf281e45c875e24f9b477466e
    Reviewed-on: https://code.wireshark.org/review/36945
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit e3257d7cd2
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 26 00:55:13 2020 -0700

    nfs: Initialize the fs_cycle element of an nfs_name_snoop_t.
    
    It has to be initialized to false, otherwise you get random misreported
    cycles.
    
    Change-Id: I1ffa1f8fae4883960ebf0522e44bc9e1378b2470
    Reviewed-on: https://code.wireshark.org/review/36939
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 15723be20ddd43020096245cb6e5a7c36483844e)
    Reviewed-on: https://code.wireshark.org/review/36940

commit 3ba3dadfb2
Author: Bert van Leeuwen <bert.vanleeuwen@gmail.com>
Date:   Fri Apr 24 11:25:01 2020 +0200

    DIS: dissector fix for Articulated Part VP records.
    
    The IEEE 1278.1-2012 spec for DIS (Distributed Interactive Simulation)
    specifies the format of Articulated Part VP record as:
    8bits  Record Type         enum
    8bits  Change Indicator    unsigned integer
    16bits ID                  unsigned integer
    32bits Parameter Type      enum
    32bits Parameter Value     floating point
    32bits Padding             unused
    
    (Section 6.2.94.2)
    
    The dissector was interpreting the last 64bits as one value, this patch
    fixes it to interpret it as 32bit float and 32bit padding.
    
    Change-Id: Id509715f02daeecf12e3094fc1ed63e81705852b
    Reviewed-on: https://code.wireshark.org/review/36922
    Petri-Dish: Anders Broman <a.broman58@gmail.com>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    (cherry picked from commit 5a854b882fd90f97e20539568e8277f12a98c342)
    Reviewed-on: https://code.wireshark.org/review/36936
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 1409d1f4f0
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Apr 24 13:21:02 2020 -0700

    Docs+help: Remove "-m".
    
    Support for the -m (monospace font) flag was removed from Wireshark in
    2.3/2.4 in g37252634c4. Remove it from the man page and help output.
    
    Change-Id: Idaafeb6cd30d7deea6086a065168c91affd6f0ad
    Reviewed-on: https://code.wireshark.org/review/36926
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Jaap Keuter <jaap.keuter@xs4all.nl>
    (cherry picked from commit dddb086f58db0825b959e4e7b4c2ccea11dc4d0b)
    Reviewed-on: https://code.wireshark.org/review/36933
    Petri-Dish: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 3f4e014dc1
Author: Guy Harris <guy@alum.mit.edu>
Date:   Thu Apr 23 23:10:48 2020 -0700

    Check the validator in ExtArgText::isValid().
    
    The validator doesn't prevent the input focus from being transferred out
    of the QLineEdit, and it merely prevents the user from entering a value
    that's considered "invalid" rather than "not valid but "intermediate"".
    
    For QIntValidator(), values that have more digits than the maximum value
    are "invalid", but values that have the same number of digits but that
    are larger are just "intermediate".
    
    This means the user will be able to send such a value to the extcap
    module.
    
    So we explicitly check the validator in ExtArgText::isValid(), so that
    1) we provide visual feedback (at least to people who can detect a red
    background) for out-of-range values that don't have too many digits and
    2) prevent them from being treated as valid and passed to the extcap
    module.
    
    Bug: 16510
    Change-Id: Ie5b90cf5dbb57c91744f6a28a71674b65ef21bb6
    Reviewed-on: https://code.wireshark.org/review/36914
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    Reviewed-by: Roland Knall <rknall@gmail.com>
    (cherry picked from commit 8d4844a1da585a23776634c74ed87c8cb5993abb)
    Reviewed-on: https://code.wireshark.org/review/36918
    Petri-Dish: Roland Knall <rknall@gmail.com>

commit 6643c561b8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 19 08:34:17 2020 +0000

    [Automatic update for 2020-04-19]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I401a9082a8c1aac32561bd5dd952a29491fd96c7
    Reviewed-on: https://code.wireshark.org/review/36882
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 84afe20cb3
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Apr 14 17:10:44 2020 -0700

    NFS: Add filesystem cycle detection.
    
    Detect cycles and large depths when snooping full names.
    
    Bug: 16476
    Change-Id: I4cddf3d6e6c58d1d382a3ea3b3ed09644562c352
    Reviewed-on: https://code.wireshark.org/review/36847
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Petri-Dish: Gerald Combs <gerald@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Anders Broman <a.broman58@gmail.com>
    (cherry picked from commit fc6763989c7a7c4e4b0522b12b955e5a285d388a)
    Reviewed-on: https://code.wireshark.org/review/36853

commit 1d64061174
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Apr 14 12:45:16 2020 -0700

    Release notes: The Windows installers now ship with Qt 5.12.8.
    
    Change-Id: I0a3d28607e6450cbdaa3e40a6707ab0b656e9de3
    Reviewed-on: https://code.wireshark.org/review/36845
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit ef50d8f388
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Apr 13 13:34:59 2020 +0200

    Qt: Fix a memory leak in ByteViewTab
    
    FieldInformation::parentField() allocated a new FieldInformation,
    so ensure to delete this when done.
    
    Change-Id: Id0f538cc696551ec47169103be823eb1e55d1777
    Reviewed-on: https://code.wireshark.org/review/36823
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Martin Kaiser <wireshark@kaiser.cx>
    (cherry picked from commit 1f6449c05d70a8b1acf08b7c6795723c797e3ef5)
    Reviewed-on: https://code.wireshark.org/review/36827
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit 5e0330cd49
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Apr 13 13:34:06 2020 +0200

    extcap: Fix a memory leak
    
    Change-Id: I3a7e5d10d0007972c18ccbb49f40114c700a88e2
    Reviewed-on: https://code.wireshark.org/review/36822
    Petri-Dish: Stig Bjørlykke <stig@bjorlykke.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Martin Kaiser <wireshark@kaiser.cx>
    (cherry picked from commit 55920e64e53bf015ca4056c327697fc0e8263e48)
    Reviewed-on: https://code.wireshark.org/review/36826
    Reviewed-by: Anders Broman <a.broman58@gmail.com>

commit e46a3ea2bc
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Fri Apr 10 17:28:05 2020 +0200

    SOMEIP: Bug fix for ignored length field config on struct
    
    The length field of a struct can be configured to 0, 8, 16, or 32 bits.
    Independent of the config, it will always be ignored as set to 0 bits.
    This patch repairs this.
    
    Bug: 16490
    Change-Id: Idde3616ec06067363e767bd52bb5f443439c9aca
    Signed-off-by: Dr. Lars Völker <lars.voelker@technica-engineering.de>
    Reviewed-on: https://code.wireshark.org/review/36770
    Petri-Dish: Pascal Quantin <pascal@wireshark.org>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Pascal Quantin <pascal@wireshark.org>
    Reviewed-on: https://code.wireshark.org/review/36830

commit 9aafe3fd29
Author: Dario Lombardo <lomato@gmail.com>
Date:   Sun Apr 12 00:14:02 2020 +0200

    Qt: don't use a widget if not set.
    
    Bug: 16489
    Change-Id: I9585120fb07f3c41ac2ddc7fb9eeb9b17542f5e8
    Reviewed-on: https://code.wireshark.org/review/36789
    Petri-Dish: Dario Lombardo <lomato@gmail.com>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
    Reviewed-on: https://code.wireshark.org/review/36820
    Reviewed-by: Dario Lombardo <lomato@gmail.com>

commit 0eb54804e7
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 12 14:55:52 2020 -0700

    Add record length checks.
    
    Make sure the summary record is large enough; if not, report it as a bad
    file.
    
    If it's *too* large, skip the added data.
    
    Clean up the length check for the header records - use sizeof, as we
    later use sizeof when subtracting the fixed length portion's length.
    
    Change-Id: I70697804eaa0cbbb1fb074eadf6457d237f26876
    Reviewed-on: https://code.wireshark.org/review/36814
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 97234edac4f9822c0ca93e92e1b194aa9092c0a6)
    Reviewed-on: https://code.wireshark.org/review/36815

commit 7f0f154a52
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 12 14:36:29 2020 -0700

    Fix a comment.
    
    Change-Id: I91ba743029247c7fcfac11bdfe7fc15680ab4137
    Reviewed-on: https://code.wireshark.org/review/36810
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 175b15ebc3d52e985e79c337ed717e6622967ba7)
    Reviewed-on: https://code.wireshark.org/review/36811

commit 5e6418fefe
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sun Apr 12 13:26:59 2020 -0700

    Fix previous change.
    
    Get rid of leftover duplicate code setting up the wtap structure and
    private data before we've found a summary record.
    
    If we find no data records, break out of the loop, so we fall into the
    code that sets up the wtap structure and private data.
    
    Change-Id: I00652bb7f3cb52b6c7c2088c6dd5fe5ec9a012a7
    Reviewed-on: https://code.wireshark.org/review/36806
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 73115664d88145d88e736ed9feb5a9a36c3da68a)
    Reviewed-on: https://code.wireshark.org/review/36807

commit b4827960d8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 12 08:29:24 2020 +0000

    [Automatic update for 2020-04-12]
    
    Update manuf, services enterprise numbers, translations, and other items.
    
    Change-Id: I39380919cdd5bffc4b2196f5337132d079774f34
    Reviewed-on: https://code.wireshark.org/review/36800
    Reviewed-by: Gerald Combs <gerald@wireshark.org>

commit 829b454ebe
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Apr 11 20:43:09 2020 -0700

    Fix the heuristic for checking whether it's a CAM Inspector file.
    
    wtap_read_bytes() returns TRUE on *success*, so if we're in the loop,
    the last read succeeded, and no error code was supplied.  When we *exit*
    the loop, the read didn't succeed; check for the status then.  If we got
    a short read, we ran out of file data, so check the heuristics (even if
    it's not an integral number of 2-byte blocks, treat it as a CAM
    Inspector file - it might have gotten cut short); if we got a real read
    error, report that to our caller.
    
    Bug: 16458
    Change-Id: Ia1e838006744dadbc2883459aec16d0d11b732e1
    Reviewed-on: https://code.wireshark.org/review/36795
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 8dea51c7c2675825e76757a57dd4b2877bea27a9)
    Reviewed-on: https://code.wireshark.org/review/36796

commit 18563e43b2
Author: Guy Harris <guy@alum.mit.edu>
Date:   Sat Apr 11 18:42:58 2020 -0700

    lanalyzer: Make sure a LANalyzer file has exactly one summary record.
    
    If it has none, we don't know what link-layer header type it has, nor do
    we have a start time to use for time stamps.
    
    If it has more than one, we don't know which one to believe.
    
    Bug: 16459
    Change-Id: I306ec45171f9de4643699a53a4d837f4f7750c69
    Reviewed-on: https://code.wireshark.org/review/36791
    Petri-Dish: Guy Harris <gharris@sonic.net>
    Tested-by: Petri Dish Buildbot
    Reviewed-by: Guy Harris <gharris@sonic.net>
    (cherry picked from commit 58222a0d0e1ed6c8edd57ed837bb1b01330d1f11)
    Reviewed-on: https://code.wireshark.org/review/36792

commit 68f94891e4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Apr 8 17:54:37 2020 -0700

    3.2.3 → 3.2.4.
    
    Change-Id: Id451ef1da4338b7c2b0f3443c4d6707c6ae55cf2
    Reviewed-on: https://code.wireshark.org/review/36760
    Reviewed-by: Gerald Combs <gerald@wireshark.org>
